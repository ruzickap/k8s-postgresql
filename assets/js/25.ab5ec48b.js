(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{316:function(t,e,a){"use strict";a.r(e);var s=a(8),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"zalando-postgres-operator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zalando-postgres-operator"}},[t._v("#")]),t._v(" Zalando Postgres Operator")]),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[t._v("DANGER")]),t._v(" "),e("p",[t._v("This is not complete !")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/zalando/postgres-operator/f2dddb0f2bea3951181566b30d4560b49c684d08/docs/diagrams/logo.png",alt:"Logo",title:"Logo"}})]),t._v(" "),e("p",[t._v("The Postgres Operator enables highly-available "),e("a",{attrs:{href:"https://www.postgresql.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PostgreSQL"),e("OutboundLink")],1),t._v("\nclusters on Kubernetes (K8s) powered by "),e("a",{attrs:{href:"https://github.com/zalando/spilo",target:"_blank",rel:"noopener noreferrer"}},[t._v("Patroni"),e("OutboundLink")],1),t._v(".\nIt is configured only through manifests to ease integration into automated CI/CD\npipelines with no access to Kubernetes directly.")]),t._v(" "),e("h2",{attrs:{id:"operator-features"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#operator-features"}},[t._v("#")]),t._v(" Operator features")]),t._v(" "),e("ul",[e("li",[t._v("Rolling updates on Postgres cluster changes")]),t._v(" "),e("li",[t._v("Volume resize without Pod restarts")]),t._v(" "),e("li",[t._v("Cloning Postgres clusters")]),t._v(" "),e("li",[t._v("Logical Backups to S3 Bucket")]),t._v(" "),e("li",[t._v("Standby cluster from S3 WAL archive")]),t._v(" "),e("li",[t._v("Configurable for non-cloud environments")]),t._v(" "),e("li",[t._v("UI to create and edit Postgres cluster manifests")])]),t._v(" "),e("h2",{attrs:{id:"postgresql-operator-features"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#postgresql-operator-features"}},[t._v("#")]),t._v(" PostgreSQL Operator features")]),t._v(" "),e("ul",[e("li",[t._v("Supports PostgreSQL 9.6+")]),t._v(" "),e("li",[t._v("Streaming replication cluster via Patroni")]),t._v(" "),e("li",[t._v("Point-In-Time-Recovery with\n"),e("a",{attrs:{href:"https://www.postgresql.org/docs/11/app-pgbasebackup.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("pg_basebackup"),e("OutboundLink")],1),t._v(" /\n"),e("a",{attrs:{href:"https://github.com/wal-e/wal-e",target:"_blank",rel:"noopener noreferrer"}},[t._v("WAL-E"),e("OutboundLink")],1),t._v(" via "),e("a",{attrs:{href:"https://github.com/zalando/spilo",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spilo"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("Preload libraries: "),e("a",{attrs:{href:"https://github.com/CyberDem0n/bg_mon",target:"_blank",rel:"noopener noreferrer"}},[t._v("bg_mon"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://www.postgresql.org/docs/9.4/pgstatstatements.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("pg_stat_statements"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://github.com/dimitri/pgextwlist",target:"_blank",rel:"noopener noreferrer"}},[t._v("pgextwlist"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://github.com/RafiaSabih/pg_auth_mon",target:"_blank",rel:"noopener noreferrer"}},[t._v("pg_auth_mon"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("InclUDES popular Postgres extensions such as\n"),e("a",{attrs:{href:"https://github.com/debezium/postgres-decoderbufs",target:"_blank",rel:"noopener noreferrer"}},[t._v("decoderbufs"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://github.com/HypoPG/hypopg",target:"_blank",rel:"noopener noreferrer"}},[t._v("hypopg"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://github.com/citusdata/pg_cron",target:"_blank",rel:"noopener noreferrer"}},[t._v("pg_cron"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://github.com/pgpartman/pg_partman",target:"_blank",rel:"noopener noreferrer"}},[t._v("pg_partman"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://github.com/powa-team/pg_stat_kcache",target:"_blank",rel:"noopener noreferrer"}},[t._v("pg_stat_kcache"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://github.com/pgq/pgq",target:"_blank",rel:"noopener noreferrer"}},[t._v("pgq"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://github.com/okbob/plpgsql_check",target:"_blank",rel:"noopener noreferrer"}},[t._v("plpgsql_check"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://postgis.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("postgis"),e("OutboundLink")],1),t._v(",\n"),e("a",{attrs:{href:"https://github.com/pgaudit/set_user",target:"_blank",rel:"noopener noreferrer"}},[t._v("set_user"),e("OutboundLink")],1),t._v(" and\n"),e("a",{attrs:{href:"https://github.com/timescale/timescaledb",target:"_blank",rel:"noopener noreferrer"}},[t._v("timescaledb"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("The Postgres Operator has been developed at Zalando and is being used in\nproduction for over two years.")]),t._v(" "),e("h2",{attrs:{id:"installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),e("p",[t._v("Clone the repository")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" tmp\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/zalando/postgres-operator.git tmp/zalando-postgres-operator\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-C")]),t._v(" tmp/zalando-postgres-operator checkout v1.2.0\n")])])]),e("p",[t._v("Install the PostgreSQL Operator:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("helm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" zalando "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--namespace")]),t._v(" zalando tmp/zalando-postgres-operator/charts/postgres-operator "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("configKubernetes.cluster_domain")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("configLoadBalancer.db_hosted_zone")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("db."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n")])])]),e("p",[t._v("Create a Postgres cluster:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),e("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" -")]),t._v('\napiVersion: "acid.zalan.do/v1"\nkind: postgresql\nmetadata:\n  name: myteam-mytest-cluster5\n  namespace: default\nspec:\n  teamId: "myteam"\n  volume:\n    size: 1Gi\n  numberOfInstances: 2\n  users:\n    myuser:           # database owner\n    - superuser\n    - createdb\n    # mytestdb_user: []\n  enableMasterLoadBalancer: false\n  enableReplicaLoadBalancer: false\n  databases:\n    mytestdb: myuser  # dbname: owner\n  postgresql:\n    version: "10"\nEOF')]),t._v("\n")])])]),e("p",[t._v("Check the deployed cluster:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl describe postgresql\n")])])]),e("p",[t._v("Check created database pods and services:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl get pods,svc "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-l")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("application")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("spilo "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-L")]),t._v(" spilo-role\n")])])]),e("p",[t._v("Allow access to the database using Istio:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF"),e("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" -")]),t._v("\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: pgsql-myteam-mytest-cluster-gateway\n  namespace: default\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 5432\n      name: pgsql-myteam-mytest-cluster\n      protocol: TCP\n    hosts:\n    - pgsql."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n  - port:\n      number: 5433\n      name: pgsql-repl-myteam-mytest-cluster\n      protocol: TCP\n    hosts:\n    - pgsql."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: pgsql-myteam-mytest-virtual-service\n  namespace: default\nspec:\n  hosts:\n  - pgsql."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n  gateways:\n  - pgsql-myteam-mytest-cluster-gateway\n  tcp:\n  - match:\n    - port: 5432\n    route:\n    - destination:\n        host: myteam-mytest-cluster.default.svc.cluster.local\n        port:\n          number: 5432\n  - match:\n    - port: 5433\n    route:\n    - destination:\n        host: myteam-mytest-cluster-repl.default.svc.cluster.local\n        port:\n          number: 5432\nEOF")]),t._v("\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PGHOST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pgsql."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${MY_DOMAIN}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PGPORT")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5432")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PGPASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("kubectl get secret postgres.myteam-mytest-cluster.credentials "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jsonpath={.data.password}'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" base64 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\npsql "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-U")]),t._v(" postgres\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);